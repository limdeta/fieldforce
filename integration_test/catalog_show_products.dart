/*
BDD –°—Ü–µ–Ω–∞—Ä–∏–π: –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
–î–∞–Ω–æ —è –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω
  –ò –Ω–∞—Ö–æ–∂—É—Å—å –≤ –º–µ–Ω—é –ö–∞—Ç–∞–ª–æ–≥
  –ò –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–æ
–ö–æ–≥–¥–∞ –Ω–∞–∂–∏–º–∞—é –Ω–∞ –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç (3)
  –¢–æ–≥–¥–∞ —è —Ä–∞—Å–∫—Ä—ã–≤–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
  –ò –≤–∏–∂—É —Å—Ä–µ–¥–∏ —Ä–∞—Å–∫—Ä—ã–≤—à–∏—Ö—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (3)
  –¢–æ–≥–¥–∞ —è —Ä–∞—Å–∫—Ä—ã–≤–∞—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
  –ò –≤–∏–∂—É –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –≠–º–∞–ª–∏ –ù–¶ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (3)
–¢–æ–≥–¥–∞ —è –Ω–∞–∂–∏–º–∞—é –Ω–∞ —ç—Ç—É –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é
  –ò –ø–æ–ø–∞–¥–∞—é –Ω–∞ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  –ò –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –≤ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  –ò –≤–∏–∂—É –Ω–∞–≤–µ—Ä—Ö—É –∫–Ω–æ–ø–∫—É —Å–æ —Å—Ç—Ä–µ–ª–∫–æ–π –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥
  –ò –≤–∏–∂—É –Ω–∏–∂–µ —Å–ø–∏—Å–æ–∫ –ö–æ–º–ø–∞–∫—Ç–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ–¥—É–∫—Ç–∞ (–∫–∞—Ä—Ç–∏–Ω–∫–∞, –∏–º—è, –∫–æ–¥, –≤–µ—Å, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ —è—â–∏–∫–µ, —Ü–µ–Ω–∞)
  –ò –≤–∏–∂—É –∫–Ω–æ–ø–∫—É –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω–µ —Å –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –∫–∞—Ä—Ç–æ—á–∫–∏
–ö–æ–≥–¥–∞ –Ω–∞–∂–∏–º–∞—é –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ
  –¢–æ–≥–¥–∞ –ø–æ–ø–∞–¥–∞—é –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞
*/

import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';
import 'package:integration_test/integration_test.dart';
import 'package:get_it/get_it.dart';
import 'package:fieldforce/app/fixtures/dev_fixture_orchestrator.dart';
import 'package:fieldforce/features/shop/presentation/product_catalog_page.dart';
import 'package:fieldforce/app/di/test_service_locator.dart' as test_di;
import 'package:fieldforce/features/shop/domain/repositories/category_repository.dart';
import 'package:fieldforce/features/shop/domain/repositories/product_repository.dart';
import './helpers/session_test_helper.dart' as h;

void main() {
  IntegrationTestWidgetsFlutterBinding.ensureInitialized();

  setUpAll(() async {
    await test_di.setupTestServiceLocator();
    final orchestrator = GetIt.instance<DevFixtureOrchestrator>();
    await orchestrator.createFullDevDataset(); // –§–∏–∫—Å—Ç—É—Ä—ã
    await h.ensureLoggedInAsDevUser(); // –°–µ—Å—Å–∏—è

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–∫—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–∫—Å—Ç—É—Ä
    final categoryRepository = GetIt.instance<CategoryRepository>();
    final productRepository = GetIt.instance<ProductRepository>();

    print('=== –û–¢–õ–ê–î–ö–ê –ü–û–°–õ–ï –ó–ê–ì–†–£–ó–ö–ò –§–ò–ö–°–¢–£–† ===');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    final categoriesResult = await categoryRepository.getAllCategories();
    categoriesResult.fold(
      (failure) => print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${failure.message}'),
      (categories) {
        print('üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${categories.length} –∫–æ—Ä–Ω–µ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
        for (final category in categories) {
          print('  üìÇ ${category.name} (id: ${category.id}, count: ${category.count})');
          _printCategoryTree(category, 1);
        }
      }
    );

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    final productsResult = await productRepository.getAllProducts();
    productsResult.fold(
      (failure) => print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${failure.message}'),
      (products) {
        print('üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
        for (final product in products) {
          print('  üì¶ ${product.title} (–∫–æ–¥: ${product.code})');
          print('     –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${product.categoriesInstock.map((c) => '${c.name}(${c.id})').join(', ')}');
        }
      }
    );

    print('=====================================');
  });

  group('Catalog Show Products Integration Test', () {
    testWidgets('Navigate to category and show product list', (tester) async {
      await tester.pumpWidget(
        MaterialApp(
          home: const ProductCatalogPage(),
        ),
      );

      // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤
      await tester.pumpAndSettle();

      // –û—Ç–ª–∞–¥–∫–∞: –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤–∏–¥–∂–µ—Ç—ã
      final allTexts = find.byType(Text);
      final textWidgets = allTexts.evaluate();
      print('=== –í—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –≤–∏–¥–∂–µ—Ç—ã ===');
      for (final widget in textWidgets) {
        final textWidget = widget.widget as Text;
        print('–¢–µ–∫—Å—Ç: "${textWidget.data}"');
      }
      print('==============================');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
      expect(find.text('–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç'), findsOneWidget);
      expect(find.text('3'), findsOneWidget, reason: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ 3 –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–ª—è –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç (—Å—É–º–º–∞ –æ—Ç –≤—Å–µ—Ö –¥–æ—á–µ—Ä–Ω–∏—Ö)');

      // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç" (–∫–ª–∏–∫–∞–µ–º –Ω–∞ –ø—Ä–∞–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É)
      final constructionCard = find.ancestor(
        of: find.text('–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∏ —Ä–µ–º–æ–Ω—Ç'),
        matching: find.byType(Card),
      );

      // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞—Ä—Ç–æ—á–∫–µ, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –≤–∏–¥–∏–º–∞
      await tester.scrollUntilVisible(constructionCard, 50.0);

      // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∞–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –∫–∞—Ä—Ç–æ—á–∫–∏ (–≤—Ç–æ—Ä–æ–π Expanded —Å InkWell –¥–ª—è expand/collapse)
      final rightPart = find.descendant(
        of: constructionCard,
        matching: find.byType(InkWell),
      ).last; // –í—Ç–æ—Ä–æ–π InkWell - –ø—Ä–∞–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞ –¥–ª—è expand/collapse

      await tester.tap(rightPart);
      await tester.pumpAndSettle();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ä–µ–¥–∏ —Ä–∞—Å–∫—Ä—ã–≤—à–∏—Ö—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –µ—Å—Ç—å "–õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã" —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º (3)
      // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –ø–æ –¥–µ—Ä–µ–≤—É –æ—Ç –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π
      final paintMaterialsFinder = find.text('–õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã');
      expect(paintMaterialsFinder, findsWidgets);

      // –ò—â–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (3) —Ä—è–¥–æ–º —Å "–õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã" —Å—Ä–µ–¥–∏ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      // –°–Ω–∞—á–∞–ª–∞ –Ω–∞–π–¥–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –æ—Ç—Å—Ç—É–ø–æ–º (–¥–æ—á–µ—Ä–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å)
      final indentedContainer = find.ancestor(
        of: find.text('–õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'),
        matching: find.byType(Container),
      ).last; // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π (—Å–∞–º—ã–π –≤–ª–æ–∂–µ–Ω–Ω—ã–π)

      final paintCard = find.ancestor(
        of: indentedContainer,
        matching: find.byType(Card),
      );
      expect(find.descendant(of: paintCard, matching: find.text('3')), findsWidgets,
        reason: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ 3 –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–ª—è –õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã (—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è)');

      // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é "–õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã" (–∫–ª–∏–∫–∞–µ–º –Ω–∞ –ø—Ä–∞–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –¥–ª—è expand/collapse)
      final paintMaterialsCard = find.ancestor(
        of: find.text('–õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã'),
        matching: find.byType(Card),
      );

      // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ –∫–∞—Ä—Ç–æ—á–∫–µ, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –≤–∏–¥–∏–º–∞
      await tester.scrollUntilVisible(paintMaterialsCard, 50.0);

      // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∞–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –∫–∞—Ä—Ç–æ—á–∫–∏ "–õ–∞–∫–æ–∫—Ä–∞—Å–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã" (–≤—Ç–æ—Ä–æ–π InkWell –¥–ª—è expand/collapse)
      final paintRightPart = find.descendant(
        of: paintMaterialsCard,
        matching: find.byType(InkWell),
      ).last; // –í—Ç–æ—Ä–æ–π InkWell - –ø—Ä–∞–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞ –¥–ª—è expand/collapse

      await tester.tap(paintRightPart);
      await tester.pumpAndSettle();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–∏–¥–∏–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é "–≠–º–∞–ª–∏ –ù–¶" —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º (3)
      expect(find.text('–≠–º–∞–ª–∏ –ù–¶'), findsOneWidget);

      // –ò—â–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (3) –¥–ª—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–≠–º–∞–ª–∏ –ù–¶"
      final enamelCard = find.ancestor(
        of: find.text('–≠–º–∞–ª–∏ –ù–¶'),
        matching: find.byType(Card),
      );
      expect(find.descendant(of: enamelCard, matching: find.text('3')), findsWidgets,
        reason: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ 3 –¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –¥–ª—è –≠–º–∞–ª–∏ –ù–¶');

      // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é "–≠–º–∞–ª–∏ –ù–¶" (–∫–ª–∏–∫–∞–µ–º –Ω–∞ –ø—Ä–∞–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Ç–æ–≤–∞—Ä–∞–º)
      // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–∞–≤—É—é –ø–æ–ª–æ–≤–∏–Ω—É –∫–∞—Ä—Ç–æ—á–∫–∏ "–≠–º–∞–ª–∏ –ù–¶" (–≤—Ç–æ—Ä–æ–π InkWell)
      final enamelRightPart = find.descendant(
        of: enamelCard,
        matching: find.byType(InkWell),
      ).last; // –ü–æ—Å–ª–µ–¥–Ω–∏–π InkWell - –ø—Ä–∞–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞

      // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –∫ —ç–ª–µ–º–µ–Ω—Ç—É, —á—Ç–æ–±—ã –æ–Ω –±—ã–ª –≤–∏–¥–µ–Ω
      await tester.scrollUntilVisible(enamelRightPart, 50.0);

      await tester.tap(enamelRightPart);
      await tester.pumpAndSettle();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ "–≠–º–∞–ª–∏ –ù–¶"
      expect(find.text('–≠–º–∞–ª–∏ –ù–¶'), findsOneWidget);
      expect(find.byType(AppBar), findsOneWidget);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
      final productCards = find.byType(Card);
      expect(productCards, findsWidgets);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (3)
      final actualProductCount = productCards.evaluate().length;
      expect(actualProductCount, equals(3),
        reason: '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–º—É —á–∏—Å–ª—É (3)');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–∞—Ç–∞–ª–æ–≥"
      expect(find.byIcon(Icons.arrow_back), findsOneWidget);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∞ (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞)
      final firstCard = productCards.first;
      expect(find.descendant(of: firstCard, matching: find.byType(Text)), findsWidgets);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
      expect(find.byIcon(Icons.add_shopping_cart), findsWidgets, reason: '–î–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤');

      // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–µ
      final productTitle = find.descendant(
        of: firstCard,
        matching: find.byType(Text),
      ).first;
      await tester.tap(productTitle);
      await tester.pumpAndSettle();

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ø–∞–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –ø—Ä–æ–¥—É–∫—Ç–∞
      expect(find.byType(AppBar), findsOneWidget);
      expect(find.byIcon(Icons.arrow_back), findsOneWidget, reason: '–î–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ–¥—É–∫—Ç–∞');
    });
  });
}

void _printCategoryTree(dynamic category, int depth) {
  final indent = '  ' * depth;
  print('$indentüìÇ ${category.name} (id: ${category.id}, count: ${category.count})');
  for (final child in category.children ?? []) {
    _printCategoryTree(child, depth + 1);
  }
}


