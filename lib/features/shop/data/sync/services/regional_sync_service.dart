// lib/features/shop/data/sync/services/regional_sync_service.dart

import 'dart:io';
import 'dart:typed_data';

import 'package:http/http.dart' show Response;
import 'package:http/io_client.dart';
import 'package:logging/logging.dart';

import '../generated/sync.pb.dart';
import '../generated/product.pb.dart';
import '../models/product_with_price.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ–¥—É–∫—Ç—ã –±–µ–∑ —Ü–µ–Ω)
/// 
/// –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —É—Ç—Ä–æ–º 1 —Ä–∞–∑ –≤ –¥–µ–Ω—å:
/// - –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ä–µ–≥–∏–æ–Ω–∞ (~7000 —Ç–æ–≤–∞—Ä–æ–≤)
/// - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç protobuf –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö
/// - –°–∂–∞—Ç–∏–µ gzip –¥–ª—è –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞—Ñ–∏–∫–∞
class RegionalSyncService {
  static final Logger _logger = Logger('RegionalSyncService');
  
  final String _baseUrl;
  String? _sessionCookie;

  RegionalSyncService({
    required String baseUrl,
    String? sessionCookie,
  }) : _baseUrl = baseUrl,
       _sessionCookie = sessionCookie;

  /// üåç –≠–¢–ê–ü 1: –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã —Ä–µ–≥–∏–æ–Ω–∞ (–ë–ï–ó –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ —Ü–µ–Ω)
  /// 
  /// –†–∞–∑–º–µ—Ä: ~15-25 –ú–ë (—Å–∂–∞—Ç–æ)
  /// –ß–∞—Å—Ç–æ—Ç–∞: 1 —Ä–∞–∑ –≤ –¥–µ–Ω—å —É—Ç—Ä–æ–º
  /// [regionCode] - —Å—Ç—Ä–æ–∫–æ–≤—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ä–µ–≥–∏–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, P3V, M3V, K3V)
  Future<RegionalCacheResponse> getRegionalProducts(String regionCode) async {
    _logger.info('üåç –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Ä–µ–≥–∏–æ–Ω–∞: $regionCode');
    
    final url = '$_baseUrl/mobile-sync/regional/$regionCode';
    final startTime = DateTime.now();
    
    try {
      final response = await _makeProtobufRequest(url);
      
      _logger.info('üìä –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å protobuf –¥–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä–æ–º ${response.length} –±–∞–π—Ç');
      
      try {
        final regionalData = RegionalCacheResponse.fromBuffer(response);
        
        // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PROTOBUF –î–ê–ù–ù–´–•
        _logger.info('üì¶ Protobuf –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω—ã');
        _logger.info('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${regionalData.products.length}');
        
        if (regionalData.products.isNotEmpty) {
          final firstProduct = regionalData.products.first;
          _logger.info('üîç –ü–ï–†–í–´–ô –ü–†–û–î–£–ö–¢:');
          _logger.info('   code: ${firstProduct.code}');
          _logger.info('   bcode: ${firstProduct.bcode}');
          _logger.info('   hasCatalogId: ${firstProduct.hasCatalogId()}');
          _logger.info('   catalogId: ${firstProduct.catalogId}');
          _logger.info('   title: ${firstProduct.title}');
          _logger.info('   priceListCategoryId: ${firstProduct.priceListCategoryId}');
        }
        
        final duration = DateTime.now().difference(startTime);
        _logger.info(
          '‚úÖ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã: ${regionalData.products.length} —Ç–æ–≤–∞—Ä–æ–≤ '
          '–∑–∞ ${duration.inSeconds}—Å (—Ä–∞–∑–º–µ—Ä: ${_formatBytes(response.length)})'
        );
        
        _logSyncStats(regionalData);
        
        return regionalData;
      } catch (protobufError) {
        _logger.severe('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ protobuf: $protobufError');
        _logger.info('üîç –í–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ protobuf –¥–∞–Ω–Ω—ã–µ');
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ —Ç–µ–∫—Å—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        try {
          final textData = String.fromCharCodes(response.take(500)); // –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
          _logger.info('üìù –î–∞–Ω–Ω—ã–µ –∫–∞–∫ —Ç–µ–∫—Å—Ç (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤): $textData');
        } catch (_) {
          _logger.info('üìù –î–∞–Ω–Ω—ã–µ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Ç–µ–∫—Å—Ç–æ–º');
        }
        
        rethrow;
      }
      
    } catch (e, st) {
      _logger.severe('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è $regionCode', e, st);
      rethrow;
    }
  }

  /// –í—ã–ø–æ–ª–Ω—è–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å —Å protobuf –¥–∞–Ω–Ω—ã–º–∏
  Future<Uint8List> _makeProtobufRequest(String url, {Uint8List? requestData}) async {
    // –°–æ–∑–¥–∞–µ–º HTTP –∫–ª–∏–µ–Ω—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
  final ioClient = HttpClient()..autoUncompress = false;
    ioClient.badCertificateCallback = (X509Certificate cert, String host, int port) => true;
    final client = IOClient(ioClient);
    
    try {
      final uri = Uri.parse(url);
      
      final headers = <String, String>{
        'Accept': 'application/x-protobuf',
        'Accept-Encoding': 'gzip',
        'User-Agent': 'FieldForce-Mobile/1.0',
      };
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –∫—É–∫—É
      if (_sessionCookie != null && _sessionCookie!.isNotEmpty) {
        final fullCookie = _sessionCookie!.startsWith('PHPSESSID=')
            ? _sessionCookie!
            : 'PHPSESSID=$_sessionCookie';
        headers['Cookie'] = fullCookie;
        _logger.fine('üç™ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–µ—Å—Å–∏–æ–Ω–Ω–∞—è –∫—É–∫–∞');
      }
      
      _logger.fine('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ protobuf –∑–∞–ø—Ä–æ—Å–∞ –∫ $uri');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞
      if (requestData != null) {
        _logger.info('üì§ POST –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏ (${requestData.length} –±–∞–π—Ç)');
        final response = await client.post(uri, headers: headers, body: requestData);
        
        if (response.statusCode != 200) {
          throw Exception('HTTP ${response.statusCode}: ${response.reasonPhrase}');
        }
        return _processResponse(response);
        
      } else {
        _logger.info('üåê GET –∑–∞–ø—Ä–æ—Å (–±–µ–∑ –¥–∞–Ω–Ω—ã—Ö)');
        final response = await client.get(uri, headers: headers);
        
        if (response.statusCode != 200) {
          throw Exception('HTTP ${response.statusCode}: ${response.reasonPhrase}');
        }
        return _processResponse(response);
      }
      
    } finally {
      client.close();
    }
  }

  /// üîß –û–±—Ä–∞–±–æ—Ç–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞ —Å gzip –∏ protobuf
  Uint8List _processResponse(Response response) {
    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    _logger.info('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –û–¢–í–ï–¢–ê:');
    _logger.info('   Status Code: ${response.statusCode}');
    _logger.info('   Content-Length: ${response.headers['content-length'] ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'}');
    _logger.info('   Content-Type: ${response.headers['content-type'] ?? '–Ω–µ —É–∫–∞–∑–∞–Ω'}');
    _logger.info('   Content-Encoding: ${response.headers['content-encoding'] ?? '–Ω–µ—Ç'}');
    _logger.info('   –†–∞–∑–º–µ—Ä —Ç–µ–ª–∞: ${response.bodyBytes.length} –±–∞–π—Ç');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –±–∞–π—Ç—ã –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (response.bodyBytes.isNotEmpty) {
      final firstBytes = response.bodyBytes.take(20).map((b) => b.toRadixString(16).padLeft(2, '0')).join(' ');
      _logger.info('   –ü–µ—Ä–≤—ã–µ –±–∞–π—Ç—ã: $firstBytes');
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º gzip —Å–∂–∞—Ç–∏–µ
    var responseBytes = response.bodyBytes;
    final contentEncoding = response.headers['content-encoding'];
    
    if (contentEncoding == 'gzip') {
      try {
        responseBytes = Uint8List.fromList(gzip.decode(responseBytes));
        _logger.info('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω—ã –∏–∑ gzip: ${responseBytes.length} –±–∞–π—Ç');
      } catch (e) {
        _logger.warning('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∏ gzip, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ: $e');
        // –ï—Å–ª–∏ gzip –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
        responseBytes = response.bodyBytes;
      }
    }
    
    _logger.fine('üì• –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: ${_formatBytes(responseBytes.length)}');
    
    return responseBytes;
  }

  /// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç protobuf Product –≤ ProductInfo
  ProductInfo convertProductToInfo(Product pbProduct) {
    return ProductInfo(
      code: pbProduct.code,
      bcode: pbProduct.bcode,
      title: pbProduct.title,
      vendorCode: pbProduct.vendorCode,
      barcodes: pbProduct.barcodes,
      isMarked: pbProduct.isMarked,
      novelty: pbProduct.novelty,
      popular: pbProduct.popular,
      amountInPackage: pbProduct.amountInPackage,
      canBuy: pbProduct.canBuy,
      brandName: pbProduct.hasBrand() ? pbProduct.brand.name : null,
      manufacturerName: pbProduct.hasManufacturer() ? pbProduct.manufacturer.name : null,
      categoryName: pbProduct.hasCategory() ? pbProduct.category.name : null,
      typeName: pbProduct.hasType() ? pbProduct.type.name : null,
      seriesName: pbProduct.hasSeries() ? pbProduct.series.name : null,
      defaultImageUrl: pbProduct.hasDefaultImage() ? pbProduct.defaultImage.uri : null,
      imageUrls: pbProduct.images.map((img) => img.uri).toList(),
      description: pbProduct.description.isNotEmpty ? pbProduct.description : null,
      howToUse: pbProduct.howToUse.isNotEmpty ? pbProduct.howToUse : null,
      ingredients: pbProduct.ingredients.isNotEmpty ? pbProduct.ingredients : null,
    );
  }

  /// –õ–æ–≥–∏—Ä—É–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  void _logSyncStats(RegionalCacheResponse response) {
    if (response.hasStats()) {
      final stats = response.stats;
      _logger.info(
        'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:\n'
        '   –†–µ–≥–∏–æ–Ω: ${stats.regionFiasId}\n'
        '   –ü—Ä–æ–¥—É–∫—Ç—ã: ${stats.productsCount}\n'
        '   –û—Å—Ç–∞—Ç–∫–∏: ${stats.stockItemsCount}\n'
        '   –†–∞–∑–º–µ—Ä –∫–µ—à–∞: ${_formatBytes(stats.cacheSizeBytes.toInt())}\n'
        '   –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${stats.generationTimeSeconds.toStringAsFixed(2)}—Å\n'
        '   –í–µ—Ä—Å–∏—è –∫–µ—à–∞: ${response.cacheVersion}'
      );
    }
  }

  /// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö
  String _formatBytes(int bytes) {
    if (bytes < 1024) return '${bytes}B';
    if (bytes < 1024 * 1024) return '${(bytes / 1024).toStringAsFixed(1)}KB';
    return '${(bytes / (1024 * 1024)).toStringAsFixed(1)}MB';
  }

  /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –∫—É–∫—É –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  void setSessionCookie(String cookie) {
    _sessionCookie = cookie;
    _logger.fine('üîê –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Å–µ—Å—Å–∏–æ–Ω–Ω–∞—è –∫—É–∫–∞');
  }

  /// –û—á–∏—â–∞–µ—Ç —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –∫—É–∫—É
  void clearSession() {
    _sessionCookie = null;
    _logger.fine('üö™ –°–µ—Å—Å–∏—è –æ—á–∏—â–µ–Ω–∞');
  }
}