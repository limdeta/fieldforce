import 'package:logging/logging.dart';

import 'regional_sync_service.dart';
import 'stock_sync_service.dart';
import 'outlet_pricing_sync_service.dart';
import '../repositories/protobuf_sync_repository.dart';
import '../models/product_protobuf_converter.dart';
import '../models/stock_item_protobuf_converter.dart';
import '../../../domain/repositories/product_repository.dart';
import '../../../domain/repositories/stock_item_repository.dart';

/// –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä –≤—Å–µ—Ö protobuf —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–π
/// –£–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
class ProtobufSyncCoordinator {
  static final Logger _logger = Logger('ProtobufSyncCoordinator');
  
  final RegionalSyncService _regionalSyncService;
  final StockSyncService _stockSyncService;
  final OutletPricingSyncService _outletPricingSyncService;
  final ProtobufSyncRepository _syncRepository;
  final ProductRepository _productRepository;
  final StockItemRepository _stockItemRepository;
  
  ProtobufSyncCoordinator({
    required RegionalSyncService regionalSyncService,
    required StockSyncService stockSyncService,
    required OutletPricingSyncService outletPricingSyncService,
    required ProtobufSyncRepository syncRepository,
    required ProductRepository productRepository,
    required StockItemRepository stockItemRepository,
  }) : _regionalSyncService = regionalSyncService,
       _stockSyncService = stockSyncService,
       _outletPricingSyncService = outletPricingSyncService,
       _syncRepository = syncRepository,
       _productRepository = productRepository,
       _stockItemRepository = stockItemRepository;

  /// –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Ä–µ–≥–∏–æ–Ω–∞
  /// 
  /// –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å:
  /// 1. –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫—ç—à (–ø—Ä–æ–¥—É–∫—Ç—ã, –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ) - –µ–∂–µ–¥–Ω–µ–≤–Ω–æ
  /// 2. –û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö - –µ–∂–µ—á–∞—Å–Ω–æ  
  /// 3. –î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã —Ç–æ—á–µ–∫ - –µ–∂–µ—á–∞—Å–Ω–æ
  /// 
  /// [regionFiasId] - FIAS –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞
  /// [outletIds] - —Å–ø–∏—Å–æ–∫ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ü–µ–Ω
  /// [forceFullSync] - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
  Future<SyncResult> performFullRegionalSync(
    String regionFiasId,
    List<int> outletIds, {
    bool forceFullSync = false,
  }) async {
    _logger.info('üîÑ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ–≥–∏–æ–Ω–∞ $regionFiasId');
    final startTime = DateTime.now();
    
    final result = SyncResult();
    
    try {
      // 1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ–≥–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫—ç—à–∞ (–ø—Ä–æ–¥—É–∫—Ç—ã)
      _logger.info('üì¶ –≠—Ç–∞–ø 1: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
      final lastRegionalSync = await _syncRepository.getLastRegionalSync(regionFiasId);
      final regionalResponse = forceFullSync 
        ? await _regionalSyncService.getRegionalProducts(regionFiasId)
        : await _regionalSyncService.getRegionalProductsDelta(regionFiasId, lastRegionalSync ?? DateTime.now().subtract(const Duration(days: 1)));
      
      // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º protobuf –ø—Ä–æ–¥—É–∫—Ç—ã –≤ domain —Å—É—â–Ω–æ—Å—Ç–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
      final products = ProductProtobufConverter.fromProtobufList(regionalResponse.products);
      final saveResult = await _productRepository.saveProducts(products);
      saveResult.fold(
        (failure) => _logger.warning('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${failure.message}'),
        (_) => _logger.info('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤'),
      );
      result.productsCount = products.length;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      await _syncRepository.saveLastRegionalSync(regionFiasId, DateTime.now(), result.productsCount);
      
      // 2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö
      _logger.info('üìä –≠—Ç–∞–ø 2: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤...');
      final lastStockUpdate = forceFullSync ? null : await _syncRepository.getLastStockSync(regionFiasId);
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Å—Ç–∞—Ç–∫–æ–≤ —á–µ—Ä–µ–∑ StockSyncService
      final stockCount = await _syncStockItems(regionFiasId, lastStockUpdate);
      result.stockItemsCount = stockCount;
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤
      await _syncRepository.saveLastStockSync(regionFiasId, DateTime.now(), result.stockItemsCount);
      
      // 3. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω —Ç–æ—á–µ–∫
      _logger.info('üí∞ –≠—Ç–∞–ø 3: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ü–µ–Ω —Ç–æ—á–µ–∫...');
      final pricingResults = await _outletPricingSyncService.batchSyncOutletPricing(
        outletIds,
        null, // –í—Å–µ —Ç–æ–≤–∞—Ä—ã
      );
      result.outletPricingCount = pricingResults.values.fold(0, (a, b) => a + b);
      
      final duration = DateTime.now().difference(startTime);
      result.duration = duration;
      result.success = true;
      
      _logger.info('‚úÖ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${duration.inSeconds} —Å–µ–∫');
      _logger.info('üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: ${result.productsCount} —Ç–æ–≤–∞—Ä–æ–≤, ${result.stockItemsCount} –æ—Å—Ç–∞—Ç–∫–æ–≤, ${result.outletPricingCount} —Ü–µ–Ω');
      
    } catch (e, stackTrace) {
      result.success = false;
      result.error = e.toString();
      
      _logger.severe('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $e', e, stackTrace);
      rethrow;
    }
    
    return result;
  }

  /// –í—ã–ø–æ–ª–Ω—è–µ—Ç –±—ã—Å—Ç—Ä—É—é –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
  /// 
  /// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —á–∞—Å—Ç—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–∫–∞–∂–¥—ã–µ 15-30 –º–∏–Ω—É—Ç):
  /// - –¢–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–∏–≤—à–∏–µ—Å—è –æ—Å—Ç–∞—Ç–∫–∏
  /// - –¢–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–∏–≤—à–∏–µ—Å—è —Ü–µ–Ω—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—á–µ–∫
  /// 
  /// [regionFiasId] - FIAS –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞
  /// [activeOutletIds] - —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫
  Future<SyncResult> performIncrementalSync(
    String regionFiasId,
    List<int> activeOutletIds,
  ) async {
    _logger.info('‚ö° –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–µ–≥–∏–æ–Ω–∞ $regionFiasId');
    final startTime = DateTime.now();
    
    final result = SyncResult();
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
      final lastStockUpdate = await _syncRepository.getLastStockSync(regionFiasId);
      
      // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ —Ü–µ–Ω
      final futures = <Future>[];
      
      // –û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
      futures.add(
        _stockSyncService.syncRegionalStock(
          regionFiasId,
          lastUpdate: lastStockUpdate,
        ).then((count) => result.stockItemsCount = count),
      );
      
      // –¶–µ–Ω—ã –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—á–µ–∫
      if (activeOutletIds.isNotEmpty) {
        futures.add(
          _outletPricingSyncService.batchSyncOutletPricing(
            activeOutletIds,
            null, // –í—Å–µ —Ç–æ–≤–∞—Ä—ã, –Ω–æ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–∏–≤—à–∏–µ—Å—è —Ü–µ–Ω—ã
          ).then((pricingResults) {
            result.outletPricingCount = pricingResults.values.fold(0, (a, b) => a + b);
          }),
        );
      }
      
      await Future.wait(futures);
      
      final duration = DateTime.now().difference(startTime);
      result.duration = duration;
      result.success = true;
      
      _logger.info('‚úÖ –ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∑–∞ ${duration.inMilliseconds} –º—Å');
      
    } catch (e, stackTrace) {
      result.success = false;
      result.error = e.toString();
      
      _logger.severe('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $e', e, stackTrace);
      rethrow;
    }
    
    return result;
  }

  /// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –∫—É–∫—É –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
  void setSessionCookie(String cookie) {
    _regionalSyncService.setSessionCookie(cookie);
    _stockSyncService.setSessionCookie(cookie);
    _outletPricingSyncService.setSessionCookie(cookie);
    _logger.info('üîê –°–µ—Å—Å–∏–æ–Ω–Ω–∞—è –∫—É–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö sync —Å–µ—Ä–≤–∏—Å–æ–≤');
  }

  /// –û—á–∏—â–∞–µ—Ç —Å–µ—Å—Å–∏—é –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
  void clearSession() {
    _regionalSyncService.clearSession();
    _stockSyncService.clearSession();
    _outletPricingSyncService.clearSession();
    _logger.info('üö™ –°–µ—Å—Å–∏—è –æ—á–∏—â–µ–Ω–∞ –¥–ª—è –≤—Å–µ—Ö sync —Å–µ—Ä–≤–∏—Å–æ–≤');
  }

  /// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤ –±–∞–∑—É
  /// 
  /// [regionFiasId] - FIAS –∫–æ–¥ —Ä–µ–≥–∏–æ–Ω–∞
  /// [lastUpdate] - –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (null –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏)
  /// 
  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –æ—Å—Ç–∞—Ç–∫–æ–≤
  Future<int> _syncStockItems(String regionFiasId, DateTime? lastUpdate) async {
    try {
      // –ü–æ–∫–∞ —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥ stockSyncService
      // –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–µ—Ç–æ–¥, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏–π protobuf –¥–∞–Ω–Ω—ã–µ
      final stockCount = await _stockSyncService.syncRegionalStock(
        regionFiasId,
        lastUpdate: lastUpdate,
      );
      
      // TODO: –ö–æ–≥–¥–∞ StockSyncService –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å protobuf –¥–∞–Ω–Ω—ã–µ:
      // final stockResponse = await _stockSyncService.getRegionalStockData(regionFiasId, lastUpdate);
      // final stockItems = StockItemProtobufConverter.fromProtobufList(stockResponse.stockItems);
      // final saveResult = await _stockItemRepository.saveStockItems(stockItems);
      // saveResult.fold(
      //   (failure) => _logger.warning('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤: ${failure.message}'),
      //   (_) => _logger.info('‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ ${stockItems.length} –æ—Å—Ç–∞—Ç–∫–æ–≤'),
      // );
      
      return stockCount;
      
    } catch (e, stackTrace) {
      _logger.severe('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤ –¥–ª—è —Ä–µ–≥–∏–æ–Ω–∞ $regionFiasId: $e', e, stackTrace);
      rethrow;
    }
  }
}

/// –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
class SyncResult {
  bool success = false;
  int productsCount = 0;
  int stockItemsCount = 0;
  int outletPricingCount = 0;
  Duration? duration;
  String? error;

  @override
  String toString() {
    if (!success) {
      return 'SyncResult(failed: $error)';
    }
    
    return 'SyncResult(products: $productsCount, stock: $stockItemsCount, prices: $outletPricingCount, duration: ${duration?.inSeconds}s)';
  }
}