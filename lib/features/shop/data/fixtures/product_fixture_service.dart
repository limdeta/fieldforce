// lib/features/shop/data/fixtures/product_fixture_service.dart

import 'package:flutter/services.dart';
import 'package:fieldforce/features/shop/data/services/product_parsing_service.dart';
import 'package:fieldforce/features/shop/domain/entities/product.dart';
import 'package:fieldforce/features/shop/domain/entities/stock_item.dart';
import 'package:fieldforce/features/shop/domain/repositories/stock_item_repository.dart';
import 'package:fieldforce/shared/failures.dart';
import 'package:fieldforce/shared/either.dart';
import 'package:get_it/get_it.dart';
import 'package:logging/logging.dart';
import 'dart:math';

/// –¢–∏–ø —Ñ–∏–∫—Å—Ç—É—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
enum ProductFixtureType {
  /// –°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ (2-3 –ø—Ä–æ–¥—É–∫—Ç–∞)
  compact,
  /// –ü–æ–ª–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ –∏–∑ product_example*.json –¥–ª—è dev —Ä–µ–∂–∏–º–∞
  full,
}

class ProductFixtureService {
  static final Logger _logger = Logger('ProductFixtureService');
  final ProductParsingService _parsingService;
  final Random _random = Random();

  ProductFixtureService(this._parsingService);

  /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∏–∫—Å—Ç—É—Ä—ã
  Future<Either<Failure, List<Product>>> loadProducts(ProductFixtureType fixtureType) async {
    try {
      _logger.info('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Ç–∏–ø–∞ $fixtureType');
      
      final products = switch (fixtureType) {
        ProductFixtureType.compact => _loadCompactProducts(),
        ProductFixtureType.full => await _loadFullProducts(),
      };
      
      _logger.info('–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤');
      
      // –°–æ–∑–¥–∞–µ–º StockItems –¥–ª—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
      await _createStockItemsForProducts(products);
      
      return Right(products);
    } catch (e, st) {
      _logger.severe('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–∫—Å—Ç—É—Ä—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤', e, st);
      return Left(GeneralFailure('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–∫—Å—Ç—É—Ä—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e'));
    }
  }

  /// –°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Å 2-3 –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
  List<Product> _loadCompactProducts() {
    final compactJson = '''
[
  {
    "title": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 1",
    "barcodes": ["123456789"],
    "code": 1001,
    "bcode": 1001,
    "catalogId": 1001,
    "novelty": false,
    "popular": false,
    "isMarked": false,
    "brand": null,
    "manufacturer": null,
    "colorImage": null,
    "defaultImage": null,
    "images": [],
    "description": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤",
    "howToUse": null,
    "ingredients": null,
    "series": null,
    "category": {
      "id": 221,
      "name": "–≠–º–∞–ª–∏ –ù–¶",
      "isPublish": true,
      "description": null,
      "query": "types=1163,1220"
    },
    "priceListCategoryId": null,
    "amountInPackage": 1,
    "vendorCode": "TEST001",
    "type": {
      "id": 1163,
      "name": "–ù–∏—Ç—Ä–æ—ç–º–∞–ª—å"
    },
    "categoriesInstock": [
      {
        "id": 221,
        "name": "–≠–º–∞–ª–∏ –ù–¶"
      }
    ],
    "numericCharacteristics": [],
    "stringCharacteristics": [],
    "boolCharacteristics": [],
    "stockItems": [
      {
        "id": 1,
        "publicStock": "10 —à—Ç.",
        "warehouse": {
          "id": 1,
          "name": "–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥",
          "vendorId": "MAIN",
          "isPickUpPoint": false
        },
        "defaultPrice": 10000,
        "discountValue": 0,
        "availablePrice": null,
        "multiplicity": 1,
        "offerPrice": 10000,
        "promotion": null
      }
    ],
    "canBuy": true
  },
  {
    "title": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 2",
    "barcodes": ["987654321"],
    "code": 1002,
    "bcode": 1002,
    "catalogId": 1002,
    "novelty": false,
    "popular": false,
    "isMarked": false,
    "brand": null,
    "manufacturer": null,
    "colorImage": null,
    "defaultImage": null,
    "images": [],
    "description": "–í—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç",
    "howToUse": null,
    "ingredients": null,
    "series": null,
    "category": {
      "id": 221,
      "name": "–≠–º–∞–ª–∏ –ù–¶",
      "isPublish": true,
      "description": null,
      "query": "types=1163,1220"
    },
    "priceListCategoryId": null,
    "amountInPackage": 1,
    "vendorCode": "TEST002",
    "type": {
      "id": 1163,
      "name": "–ù–∏—Ç—Ä–æ—ç–º–∞–ª—å"
    },
    "categoriesInstock": [
      {
        "id": 221,
        "name": "–≠–º–∞–ª–∏ –ù–¶"
      }
    ],
    "numericCharacteristics": [],
    "stringCharacteristics": [],
    "boolCharacteristics": [],
    "stockItems": [
      {
        "id": 2,
        "publicStock": "5 —à—Ç.",
        "warehouse": {
          "id": 1,
          "name": "–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥",
          "vendorId": "MAIN",
          "isPickUpPoint": false
        },
        "defaultPrice": 15000,
        "discountValue": 0,
        "availablePrice": null,
        "multiplicity": 1,
        "offerPrice": 15000,
        "promotion": null
      }
    ],
    "canBuy": true
  }
]
''';
    return _parsingService.parseProductsFromJsonArray(compactJson);
  }

  /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ asset —Ñ–∞–π–ª–æ–≤
  Future<List<Product>> _loadFullProducts() async {
    final List<Product> products = [];

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ product_example*.json —Ñ–∞–π–ª—ã
    final assetFiles = [
      'assets/fixtures/product_example.json',
      'assets/fixtures/product_example2.json',
      'assets/fixtures/product_example3.json',
      'assets/fixtures/product_example4.json',
    ];

    print('üé≠ ProductFixtureService: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ ${assetFiles.length} —Ñ–∞–π–ª–æ–≤');

    for (final assetPath in assetFiles) {
      try {
        print('üé≠ ProductFixtureService: –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª $assetPath');
        final jsonString = await rootBundle.loadString(assetPath);
        final product = _parsingService.parseProduct(jsonString);
        products.add(product);
        print('üé≠ ProductFixtureService: –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ–¥—É–∫—Ç ${product.title} (–∫–æ–¥: ${product.code}) –∏–∑ $assetPath');
      } catch (e) {
        print('üé≠ ProductFixtureService: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ $assetPath: $e');
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        continue;
      }
    }

    print('üé≠ ProductFixtureService: –í—Å–µ–≥–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤');
    return products;
  }

  /// –§–∏–ª—å—Ç—Ä—É–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  List<Product> filterProductsByCategory(List<Product> products, int categoryId) {
    return products.where((product) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      if (product.category?.id == categoryId) {
        return true;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–ø–∏—Å–∫–µ categoriesInstock
      return product.categoriesInstock.any((category) => category.id == categoryId);
    }).toList();
  }

  /// –§–∏–ª—å—Ç—Ä—É–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ —Ç–∏–ø—É
  List<Product> filterProductsByType(List<Product> products, int typeId) {
    return products.where((product) => product.type?.id == typeId).toList();
  }

  /// –°–æ–∑–¥–∞–µ—Ç StockItems –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
  Future<void> _createStockItemsForProducts(List<Product> products) async {
    try {
      final stockItemRepository = GetIt.instance<StockItemRepository>();
      final stockItems = <StockItem>[];

      for (final product in products) {
        final productStockItems = _generateStockItemsForProduct(product.code);
        stockItems.addAll(productStockItems);
      }

      _logger.info('–°–æ–∑–¥–∞–µ–º ${stockItems.length} StockItem –∑–∞–ø–∏—Å–µ–π –¥–ª—è ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
      
      final result = await stockItemRepository.saveStockItems(stockItems);
      result.fold(
        (failure) => _logger.warning('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è StockItems: ${failure.message}'),
        (_) => _logger.info('StockItems —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'),
      );
    } catch (e, st) {
      _logger.severe('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è StockItems –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤', e, st);
    }
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç StockItems –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
  List<StockItem> _generateStockItemsForProduct(int productCode) {
    final stockItems = <StockItem>[];
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–≥–∏–æ–Ω—ã/–ø—Ä–æ–¥–∞–≤—Ü—ã
    const vendorIds = ['vendor_moscow', 'vendor_spb', 'vendor_nsk'];
    
    // –¢–µ—Å—Ç–æ–≤—ã–µ —Å–∫–ª–∞–¥—ã –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º
    const warehousesByVendor = {
      'vendor_moscow': [
        (1, '–°–∫–ª–∞–¥ –ú–æ—Å–∫–≤–∞ –¶–µ–Ω—Ç—Ä', false),
        (2, '–ü–í–ó –ú–æ—Å–∫–≤–∞ –ê—Ä–±–∞—Ç', true),
      ],
      'vendor_spb': [
        (4, '–°–∫–ª–∞–¥ –°–ü–± –°–µ–≤–µ—Ä', false),
        (5, '–ü–í–ó –°–ü–± –ù–µ–≤—Å–∫–∏–π', true),
      ],
      'vendor_nsk': [
        (6, '–°–∫–ª–∞–¥ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', false),
      ],
    };

    // –°–æ–∑–¥–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤ (1-2 –∏–∑ 3)
    final selectedVendors = vendorIds.take(1 + _random.nextInt(2)).toList();
    
    for (final vendorId in selectedVendors) {
      final warehouses = warehousesByVendor[vendorId] ?? [];
      
      for (final warehouse in warehouses) {
        // –° –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 80% —Å–æ–∑–¥–∞–µ–º StockItem –¥–ª—è —Å–∫–ª–∞–¥–∞
        if (_random.nextDouble() < 0.8) {
          final stockItem = _generateStockItem(
            productCode, 
            warehouse.$1, // warehouseId
            warehouse.$2, // warehouseName
            warehouse.$3, // isPickUpPoint
            vendorId,
          );
          stockItems.add(stockItem);
        }
      }
    }

    return stockItems;
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–¥–∏–Ω StockItem
  StockItem _generateStockItem(
    int productCode,
    int warehouseId, 
    String warehouseName,
    bool isPickUpPoint,
    String vendorId,
  ) {
    final basePrice = _generateBasePrice();
    final hasDiscount = _random.nextDouble() < 0.25; // 25% —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ —Å–∫–∏–¥–∫–æ–π
    
    final stock = _generateStock(isPickUpPoint);
    
    return StockItem(
      id: _generateId(),
      productCode: productCode,
      warehouseId: warehouseId,
      warehouseName: warehouseName,
      warehouseVendorId: vendorId,
      isPickUpPoint: isPickUpPoint,
      stock: stock,
      publicStock: '${stock} —à—Ç.',
      defaultPrice: basePrice,
      discountValue: hasDiscount ? ((basePrice - _generateDiscountPrice(basePrice)) / basePrice * 100).round() : 0,
      offerPrice: hasDiscount ? _generateDiscountPrice(basePrice) : null,
      currency: 'RUB',
      promotionJson: hasDiscount ? _generatePromotionJson() : null,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    );
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—É—é —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞ (–≤ –∫–æ–ø–µ–π–∫–∞—Ö)
  int _generateBasePrice() {
    final priceRanges = [
      (5000, 15000),   // 50-150 —Ä—É–±
      (15000, 50000),  // 150-500 —Ä—É–±
      (50000, 150000), // 500-1500 —Ä—É–±
    ];
    
    final range = priceRanges[_random.nextInt(priceRanges.length)];
    return range.$1 + _random.nextInt(range.$2 - range.$1);
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ
  int _generateStock(bool isPickUpPoint) {
    if (isPickUpPoint) {
      // –ü–í–ó: 0-20 —à—Ç—É–∫
      return _random.nextInt(21);
    } else {
      // –°–∫–ª–∞–¥: 0-500 —à—Ç—É–∫, —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ
      final stockTypes = [0, 5, 15, 50, 100, 250];
      return stockTypes[_random.nextInt(stockTypes.length)];
    }
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ü–µ–Ω—É —Å–æ —Å–∫–∏–¥–∫–æ–π
  int _generateDiscountPrice(int basePrice) {
    final discountPercent = 0.05 + _random.nextDouble() * 0.35; // –°–∫–∏–¥–∫–∞ 5-40%
    return (basePrice * (1 - discountPercent)).round();
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JSON –ø—Ä–æ–º–æ–∞–∫—Ü–∏–∏
  String _generatePromotionJson() {
    final promotions = [
      '{"type": "discount", "title": "–°–∫–∏–¥–∫–∞ –Ω–µ–¥–µ–ª–∏", "percent": 15}',
      '{"type": "cashback", "title": "–ö—ç—à–±—ç–∫ 10%", "percent": 10}',
      '{"type": "bundle", "title": "–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –æ—Ç 3000 —Ä—É–±", "threshold": 300000}',
    ];
    
    return promotions[_random.nextInt(promotions.length)];
  }

  /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID (–≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥–µ—Ç –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –≤ –ë–î)
  int _generateId() {
    return DateTime.now().millisecondsSinceEpoch + _random.nextInt(1000);
  }
}