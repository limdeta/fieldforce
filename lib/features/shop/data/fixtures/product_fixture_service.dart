// lib/features/shop/data/fixtures/product_fixture_service.dart

import 'package:flutter/services.dart';
import 'package:fieldforce/features/shop/data/services/product_parsing_service.dart';
import 'package:fieldforce/features/shop/domain/entities/product.dart';
import 'package:fieldforce/features/shop/domain/entities/stock_item.dart';
import 'package:fieldforce/features/shop/domain/repositories/stock_item_repository.dart';
import 'package:fieldforce/app/database/app_database.dart';
import 'package:fieldforce/shared/failures.dart';
import 'package:fieldforce/shared/either.dart';
import 'package:get_it/get_it.dart';
import 'package:logging/logging.dart';



/// –¢–∏–ø —Ñ–∏–∫—Å—Ç—É—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
enum ProductFixtureType {
  /// –°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ (2-3 –ø—Ä–æ–¥—É–∫—Ç–∞)
  compact,
  /// –ü–æ–ª–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ –∏–∑ product_example*.json –¥–ª—è dev —Ä–µ–∂–∏–º–∞
  full,
}

class ProductFixtureService {
  static final Logger _logger = Logger('ProductFixtureService');
  final ProductParsingService _parsingService;

  ProductFixtureService(this._parsingService);

  /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∏–∫—Å—Ç—É—Ä—ã
  Future<Either<Failure, List<Product>>> loadProducts(ProductFixtureType fixtureType) async {
    try {
      _logger.info('–ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Ç–∏–ø–∞ $fixtureType');
      
      final products = switch (fixtureType) {
        ProductFixtureType.compact => _loadCompactProducts(),
        ProductFixtureType.full => await _loadFullProducts(),
      };
      
      _logger.info('–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–æ–≤');
      
      return Right(products);
    } catch (e, st) {
      _logger.severe('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–∫—Å—Ç—É—Ä—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤', e, st);
      return Left(GeneralFailure('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–∫—Å—Ç—É—Ä—ã –ø—Ä–æ–¥—É–∫—Ç–æ–≤: $e'));
    }
  }

  /// –°–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Ñ–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤ —Å 2-3 –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏
  List<Product> _loadCompactProducts() {
    final compactJson = '''
[
  {
    "title": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 1",
    "barcodes": ["123456789"],
    "code": 1001,
    "bcode": 1001,
    "catalogId": 1001,
    "novelty": false,
    "popular": false,
    "isMarked": false,
    "brand": null,
    "manufacturer": null,
    "colorImage": null,
    "defaultImage": {
      "uri": "https://via.placeholder.com/300x300/FF6B35/FFFFFF?text=TEST1",
      "description": "–¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ 1"
    },
    "images": [
      {
        "uri": "https://via.placeholder.com/300x300/FF6B35/FFFFFF?text=TEST1",
        "description": "–¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ 1"
      }
    ],
    "description": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤",
    "howToUse": null,
    "ingredients": null,
    "series": null,
    "category": {
      "id": 221,
      "name": "–≠–º–∞–ª–∏ –ù–¶",
      "isPublish": true,
      "description": null,
      "query": "types=1163,1220"
    },
    "priceListCategoryId": null,
    "amountInPackage": 12,
    "vendorCode": "TEST001",
    "type": {
      "id": 1163,
      "name": "–ù–∏—Ç—Ä–æ—ç–º–∞–ª—å"
    },
    "categoriesInstock": [
      {
        "id": 221,
        "name": "–≠–º–∞–ª–∏ –ù–¶"
      }
    ],
    "numericCharacteristics": [],
    "stringCharacteristics": [],
    "boolCharacteristics": [],
    "stockItems": [
      {
        "id": 1,
        "publicStock": "10 —à—Ç.",
        "warehouse": {
          "id": 1,
          "name": "–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥",
          "vendorId": "MAIN",
          "isPickUpPoint": false
        },
        "defaultPrice": 10000,
        "discountValue": 0,
        "availablePrice": null,
        "multiplicity": 1,
        "offerPrice": 10000,
        "promotion": null
      }
    ],
    "canBuy": true
  },
  {
    "title": "–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç 2",
    "barcodes": ["987654321"],
    "code": 1002,
    "bcode": 1002,
    "catalogId": 1002,
    "novelty": false,
    "popular": false,
    "isMarked": false,
    "brand": null,
    "manufacturer": null,
    "colorImage": null,
    "defaultImage": null,
    "images": [],
    "description": "–í—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç",
    "howToUse": null,
    "ingredients": null,
    "series": null,
    "category": {
      "id": 221,
      "name": "–≠–º–∞–ª–∏ –ù–¶",
      "isPublish": true,
      "description": null,
      "query": "types=1163,1220"
    },
    "priceListCategoryId": null,
    "amountInPackage": 6,
    "vendorCode": "TEST002",
    "type": {
      "id": 1163,
      "name": "–ù–∏—Ç—Ä–æ—ç–º–∞–ª—å"
    },
    "categoriesInstock": [
      {
        "id": 221,
        "name": "–≠–º–∞–ª–∏ –ù–¶"
      }
    ],
    "numericCharacteristics": [],
    "stringCharacteristics": [],
    "boolCharacteristics": [],
    "stockItems": [
      {
        "id": 2,
        "publicStock": "5 —à—Ç.",
        "warehouse": {
          "id": 1,
          "name": "–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥",
          "vendorId": "MAIN",
          "isPickUpPoint": false
        },
        "defaultPrice": 15000,
        "discountValue": 0,
        "availablePrice": null,
        "multiplicity": 1,
        "offerPrice": 15000,
        "promotion": null
      }
    ],
    "canBuy": true
  }
]
''';
    return _parsingService.parseProductsFromJsonArray(compactJson);
  }

  /// –ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–æ–ª–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–∑ asset —Ñ–∞–π–ª–æ–≤
  Future<List<Product>> _loadFullProducts() async {
    final List<Product> products = [];

    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ product_example*.json —Ñ–∞–π–ª—ã
    final assetFiles = [
      'assets/fixtures/product_example.json',
      'assets/fixtures/product_example2.json',
      'assets/fixtures/product_example3.json',
      'assets/fixtures/product_example4.json',
    ];


    for (final assetPath in assetFiles) {
      try {
        final jsonString = await rootBundle.loadString(assetPath);
        final product = _parsingService.parseProduct(jsonString);
        products.add(product);
      } catch (e) {
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        continue;
      }
    }

    return products;
  }

  /// –§–∏–ª—å—Ç—Ä—É–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  List<Product> filterProductsByCategory(List<Product> products, int categoryId) {
    return products.where((product) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      if (product.category?.id == categoryId) {
        return true;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–ø–∏—Å–∫–µ categoriesInstock
      return product.categoriesInstock.any((category) => category.id == categoryId);
    }).toList();
  }

  /// –§–∏–ª—å—Ç—Ä—É–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ —Ç–∏–ø—É
  List<Product> filterProductsByType(List<Product> products, int typeId) {
    return products.where((product) => product.type?.id == typeId).toList();
  }

  /// –°–æ–∑–¥–∞–µ—Ç StockItems –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤  
  Future<void> createStockItemsForProducts(List<Product> products) async {
    try {
      _logger.info('üè≠ –°–æ–∑–¥–∞–µ–º –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è ${products.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${products.map((p) => p.code).join(', ')}');
      
      // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º foreign key constraints –¥–ª—è —Ñ–∏–∫—Å—Ç—É—Ä
      final database = GetIt.instance<AppDatabase>();
      await database.customStatement('PRAGMA foreign_keys = OFF');
      
      final stockItems = <StockItem>[];
      
      for (int i = 0; i < products.length; i++) {
        final product = products[i];
        final productStockItems = _createStockForProduct(product, forceInStock: i == 0);
        stockItems.addAll(productStockItems);
      }

      _logger.info('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º ${stockItems.length} StockItem –∑–∞–ø–∏—Å–µ–π');
      
      final stockItemRepository = GetIt.instance<StockItemRepository>();
      final result = await stockItemRepository.saveStockItems(stockItems);
      
      // –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ foreign key constraints
      await database.customStatement('PRAGMA foreign_keys = ON');
      
      result.fold(
        (failure) => _logger.warning('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è StockItems: ${failure.message}'),
        (_) => _logger.info('‚úÖ StockItems —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã'),
      );
    } catch (e, st) {
      _logger.severe('üí• –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è StockItems –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤', e, st);
    }
  }

  /// –°–æ–∑–¥–∞–µ—Ç –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
  List<StockItem> _createStockForProduct(Product product, {bool forceInStock = false}) {
    final stockItems = <StockItem>[];
    
    switch (product.code) {
      case 170094: // –¢—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞ YOKO
        stockItems.addAll([
          _createStockItem(product, 1, '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥', false, 25, 12000), // 120 —Ä—É–±
        ]);
        break;
        
      case 102969: // –ù–∏—Ç—Ä–æ—ç–º–∞–ª—å –∑–æ–ª–æ—Ç–∏—Å—Ç–æ-–∂–µ–ª—Ç–∞—è  
        stockItems.addAll([
          _createStockItem(product, 1, '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥', false, 15, 8500),  // 85 —Ä—É–±
          _createStockItem(product, 2, '–ü–í–ó –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π', true, 3, 9000),   // 90 —Ä—É–± (–¥–æ—Ä–æ–∂–µ –≤ –ü–í–ó)
        ]);
        break;
        
      case 102970: // –ù–∏—Ç—Ä–æ—ç–º–∞–ª—å —Å–∏–Ω—è—è
        stockItems.addAll([
          _createStockItem(product, 1, '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥', false, 22, 8500),  // 85 —Ä—É–±  
          _createStockItem(product, 2, '–ü–í–ó –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π', true, 12, 8800),  // 88 —Ä—É–±
          _createStockItem(product, 3, '–°–∫–ª–∞–¥ –Æ–≥', false, 5, 8200),         // 82 —Ä—É–± (–¥–µ—à–µ–≤–ª–µ –Ω–∞ —é–∂–Ω–æ–º —Å–∫–ª–∞–¥–µ)
        ]);
        break;
        
      case 102971: // –ù–∏—Ç—Ä–æ—ç–º–∞–ª—å –∫—Ä–∞—Å–Ω–∞—è
        stockItems.addAll([
          _createStockItem(product, 1, '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥', false, 18, 8500),  // 85 —Ä—É–±
          _createStockItem(product, 3, '–°–∫–ª–∞–¥ –Æ–≥', false, 7, 8200),         // 82 —Ä—É–±
          // –ù–ï–¢ –≤ –ü–í–ó –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π - –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤
        ]);
        break;
        
      default:
        // –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ - –ø—Ä–æ—Å—Ç–∞—è —Å—Ö–µ–º–∞
        stockItems.addAll([
          _createStockItem(product, 1, '–û—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥', false, 10, 10000), // 100 —Ä—É–±
        ]);
    }

    return stockItems;
  }
  
  /// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è StockItem
  StockItem _createStockItem(Product product, int warehouseId, String warehouseName, 
      bool isPickUp, int stock, int price) {
    return StockItem(
      id: 0, // –ê–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –≤ –ë–î
      productCode: product.code,
      warehouseId: warehouseId,
      warehouseName: warehouseName,
      warehouseVendorId: 'MAIN_VENDOR',
      isPickUpPoint: isPickUp,
      stock: stock,
      multiplicity: 1,
      publicStock: stock > 0 ? '$stock —à—Ç.' : '–ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏',
      defaultPrice: price,
      discountValue: 0,
      availablePrice: price,
      offerPrice: price,
      currency: 'RUB',
      promotionJson: null,
      createdAt: DateTime.now(),
      updatedAt: DateTime.now(),
    );
  }
}