// lib/features/shop/presentation/widgets/product_card_showcase.dart

import 'package:flutter/material.dart';
import 'package:fieldforce/features/shop/domain/entities/product_with_stock.dart';
import 'package:fieldforce/features/shop/domain/entities/product.dart';
import 'package:fieldforce/features/shop/presentation/widgets/product_card_widget.dart';

/// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è ProductCardWidget
/// –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç card, row –∏ cart –≤–∞—Ä–∏–∞–Ω—Ç—ã
class ProductCardShowcase extends StatelessWidget {
  const ProductCardShowcase({super.key});

  @override
  Widget build(BuildContext context) {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    final testProduct = _createTestProduct();
    final testProductWithStock = _createTestProductWithStock(testProduct);

    return Scaffold(
      appBar: AppBar(
        title: const Text('–í–∞—Ä–∏–∞–Ω—Ç—ã –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤'),

        foregroundColor: Colors.white,
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            // Card variant
            const Text(
              'üì± Card Variant (–¥–µ—Ñ–æ–ª—Ç–Ω—ã–π)',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const Text(
              '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è —Å–µ—Ç–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤',
              style: TextStyle(color: Colors.grey),
            ),
            const SizedBox(height: 8),
            ProductCardWidget(
              productWithStock: testProductWithStock,
              variant: ProductCardVariant.card,
              showNavigation: true,
              showCharacteristics: true,
              onTap: () => _showMessage(context, '–ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—è–º —Ç–æ–≤–∞—Ä–∞'),
              onAddToCart: () => _showMessage(context, '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É'),
              onQuantityChanged: (qty) => _showMessage(context, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–æ: $qty'),
            ),
            
            const SizedBox(height: 24),
            
            // Row variant
            const Text(
              'üìã Row Variant',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const Text(
              '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤',
              style: TextStyle(color: Colors.grey),
            ),
            const SizedBox(height: 8),
            ProductCardWidget(
              productWithStock: testProductWithStock,
              variant: ProductCardVariant.row,
              showNavigation: true,
              compactView: true,
              onTap: () => _showMessage(context, '–ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—è–º —Ç–æ–≤–∞—Ä–∞'),
              onAddToCart: () => _showMessage(context, '–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É'),
              onQuantityChanged: (qty) => _showMessage(context, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ–Ω–µ–Ω–æ: $qty'),
            ),
            
            const SizedBox(height: 8),
            
            // –ï—â–µ –æ–¥–∏–Ω row –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            ProductCardWidget(
              productWithStock: _createTestProductWithStock(_createTestProduct2()),
              variant: ProductCardVariant.row,
              showNavigation: true,
              compactView: true,
              onTap: () => _showMessage(context, '–ü–µ—Ä–µ—Ö–æ–¥ –∫ –¥–µ—Ç–∞–ª—è–º —Ç–æ–≤–∞—Ä–∞ 2'),
              onAddToCart: () => _showMessage(context, '–¢–æ–≤–∞—Ä 2 –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É'),
              onQuantityChanged: (qty) => _showMessage(context, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ 2: $qty'),
            ),
            
            const SizedBox(height: 24),
            
            // Cart variant (–ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –≤ –∫–æ—Ä–∑–∏–Ω–µ)
            const Text(
              'üõí Cart Variant',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const Text(
              '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω–µ (—Ç—Ä–µ–±—É–µ—Ç OrderLine)',
              style: TextStyle(color: Colors.grey),
            ),
            const Text(
              '(–ë—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É)',
              style: TextStyle(color: Colors.orange, fontSize: 12),
            ),
            
            const SizedBox(height: 24),
            
            // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤
            const Text(
              'üìê –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤',
              style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            
            Row(
              children: [
                // Card –≤ —É–∑–∫–æ–π –∫–æ–ª–æ–Ω–∫–µ
                Expanded(
                  child: Column(
                    children: [
                      const Text('Card', style: TextStyle(fontWeight: FontWeight.w600)),
                      ProductCardWidget(
                        productWithStock: testProductWithStock,
                        variant: ProductCardVariant.card,
                        compactView: true,
                        showNavigation: false,
                        onAddToCart: () => _showMessage(context, '–î–æ–±–∞–≤–ª–µ–Ω–æ'),
                      ),
                    ],
                  ),
                ),
                const SizedBox(width: 16),
                
                // Row –≤ —à–∏—Ä–æ–∫–æ–π –∫–æ–ª–æ–Ω–∫–µ
                Expanded(
                  flex: 2,
                  child: Column(
                    children: [
                      const Text('Row', style: TextStyle(fontWeight: FontWeight.w600)),
                      ProductCardWidget(
                        productWithStock: testProductWithStock,
                        variant: ProductCardVariant.row,
                        compactView: true,
                        showNavigation: false,
                        onAddToCart: () => _showMessage(context, '–î–æ–±–∞–≤–ª–µ–Ω–æ'),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  void _showMessage(BuildContext context, String message) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text(message),
        duration: const Duration(seconds: 1),
      ),
    );
  }

  Product _createTestProduct() {
    return Product(
      title: '–ù–∏—Ç—Ä–æ—ç–º–∞–ª—å –†–∞—Å—Ü–≤–µ—Ç –ù–¶-132–ö–ü –° –∑–æ–ª–æ—Ç–∏—Å—Ç–æ-–∂–µ–ª—Ç–∞—è 0.7 –∫–≥',
      barcodes: ['4605365042182'],
      code: 102969,
      bcode: 44759,
      catalogId: 44759,
      novelty: false,
      popular: true,
      isMarked: false,
      brand: Brand(
        searchPriority: 0,
        id: 328,
        name: '–†–∞—Å—Ü–≤–µ—Ç',
        adaptedName: null,
      ),
      images: [],
      amountInPackage: 14,
      vendorCode: '4605365042182',
      categoriesInstock: [],
      numericCharacteristics: [],
      stringCharacteristics: [],
      boolCharacteristics: [],
      canBuy: true,
    );
  }

  Product _createTestProduct2() {
    return Product(
      title: '–ö—Ä–∞—Å–∫–∞ –∞–∫—Ä–∏–ª–æ–≤–∞—è –±–µ–ª–∞—è 1.5 –∫–≥',
      barcodes: ['1234567890123'],
      code: 123456,
      bcode: 12345,
      catalogId: 12345,
      novelty: true,
      popular: false,
      isMarked: false,
      brand: Brand(
        searchPriority: 0,
        id: 123,
        name: 'ProPaint',
        adaptedName: null,
      ),
      images: [],
      amountInPackage: 6,
      vendorCode: '1234567890123',
      categoriesInstock: [],
      numericCharacteristics: [],
      stringCharacteristics: [],
      boolCharacteristics: [],
      canBuy: true,
    );
  }

  ProductWithStock _createTestProductWithStock(Product product) {
    return ProductWithStock(
      product: product,
      totalStock: 42,
      maxPrice: 55408,
      minPrice: 22163,
      hasDiscounts: true,
    );
  }
}