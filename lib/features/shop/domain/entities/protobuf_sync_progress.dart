// lib/features/shop/domain/entities/protobuf_sync_progress.dart

/// –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è protobuf —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
class ProtobufSyncProgress {
  /// –¢–µ–∫—É—â–∏–π —ç—Ç–∞–ø —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  final ProtobufSyncStage currentStage;
  
  /// –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å (0.0 - 1.0)
  final double overallProgress;
  
  /// –ü—Ä–æ–≥—Ä–µ—Å—Å —Ç–µ–∫—É—â–µ–≥–æ —ç—Ç–∞–ø–∞ (0.0 - 1.0)
  final double stageProgress;
  
  /// –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ç–µ–∫—É—â–µ–º —ç—Ç–∞–ø–µ
  final int processedItems;
  
  /// –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ç–µ–∫—É—â–µ–º —ç—Ç–∞–ø–µ
  final int totalItems;
  
  /// –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
  final String message;
  
  /// –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  final DateTime startTime;
  
  /// –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  final DateTime lastUpdateTime;

  const ProtobufSyncProgress({
    required this.currentStage,
    required this.overallProgress,
    required this.stageProgress,
    required this.processedItems,
    required this.totalItems,
    required this.message,
    required this.startTime,
    required this.lastUpdateTime,
  });

  /// –°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  factory ProtobufSyncProgress.initial() {
    final now = DateTime.now();
    return ProtobufSyncProgress(
      currentStage: ProtobufSyncStage.preparation,
      overallProgress: 0.0,
      stageProgress: 0.0,
      processedItems: 0,
      totalItems: 0,
      message: '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...',
      startTime: now,
      lastUpdateTime: now,
    );
  }

  /// –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  ProtobufSyncProgress copyWith({
    ProtobufSyncStage? currentStage,
    double? overallProgress,
    double? stageProgress,
    int? processedItems,
    int? totalItems,
    String? message,
    DateTime? startTime,
    DateTime? lastUpdateTime,
  }) {
    return ProtobufSyncProgress(
      currentStage: currentStage ?? this.currentStage,
      overallProgress: overallProgress ?? this.overallProgress,
      stageProgress: stageProgress ?? this.stageProgress,
      processedItems: processedItems ?? this.processedItems,
      totalItems: totalItems ?? this.totalItems,
      message: message ?? this.message,
      startTime: startTime ?? this.startTime,
      lastUpdateTime: lastUpdateTime ?? DateTime.now(),
    );
  }

  /// –í—ã—á–∏—Å–ª—è–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ (—ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–µ–∫—É–Ω–¥—É)
  double get processingSpeed {
    final elapsed = lastUpdateTime.difference(startTime).inSeconds;
    if (elapsed <= 0) return 0.0;
    return processedItems / elapsed;
  }

  /// –û—Ü–µ–Ω–∏–≤–∞–µ—Ç –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
  Duration? get estimatedTimeRemaining {
    final speed = processingSpeed;
    if (speed <= 0) return null;
    
    final remainingItems = totalItems - processedItems;
    if (remainingItems <= 0) return Duration.zero;
    
    final secondsRemaining = (remainingItems / speed).round();
    return Duration(seconds: secondsRemaining);
  }

  @override
  String toString() {
    return 'ProtobufSyncProgress('
        'stage: ${currentStage.displayName}, '
        'overall: ${(overallProgress * 100).toStringAsFixed(1)}%, '
        'stage: ${(stageProgress * 100).toStringAsFixed(1)}%, '
        'items: $processedItems/$totalItems, '
        'message: $message'
        ')';
  }
}

/// –≠—Ç–∞–ø—ã protobuf —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
enum ProtobufSyncStage {
  preparation('–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞'),
  regionalData('–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'),
  stockData('–û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö'),
  outletPricing('–¶–µ–Ω—ã —Ç–æ—Ä–≥–æ–≤—ã—Ö —Ç–æ—á–µ–∫'),
  finalizing('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ'),
  completed('–ó–∞–≤–µ—Ä—à–µ–Ω–æ');

  const ProtobufSyncStage(this.displayName);
  
  final String displayName;

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —ç—Ç–∞–ø–∞
  String get emoji {
    switch (this) {
      case ProtobufSyncStage.preparation:
        return 'üîß';
      case ProtobufSyncStage.regionalData:
        return 'üì¶';
      case ProtobufSyncStage.stockData:
        return 'üìä';
      case ProtobufSyncStage.outletPricing:
        return 'üí∞';
      case ProtobufSyncStage.finalizing:
        return '‚úÖ';
      case ProtobufSyncStage.completed:
        return 'üéâ';
    }
  }

  /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤–µ—Å —ç—Ç–∞–ø–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  double get weight {
    switch (this) {
      case ProtobufSyncStage.preparation:
        return 0.05; // 5%
      case ProtobufSyncStage.regionalData:
        return 0.5;  // 50% (–æ—Å–Ω–æ–≤–Ω–æ–π —ç—Ç–∞–ø)
      case ProtobufSyncStage.stockData:
        return 0.3;  // 30%
      case ProtobufSyncStage.outletPricing:
        return 0.1;  // 10%
      case ProtobufSyncStage.finalizing:
        return 0.05; // 5%
      case ProtobufSyncStage.completed:
        return 0.0;  // 0%
    }
  }
}